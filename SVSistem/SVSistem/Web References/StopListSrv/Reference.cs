//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SVSistem.StopListSrv {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SVSrvSoap", Namespace="http://tempuri.org/")]
    public partial class SVSrv : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRedemptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CardExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBalanceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SVSrv() {
            this.Url = global::SVSistem.Properties.Settings.Default.SVSistem_StopListSrv_SVSrv;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddCardCompletedEventHandler AddCardCompleted;
        
        /// <remarks/>
        public event AddRedemptionCompletedEventHandler AddRedemptionCompleted;
        
        /// <remarks/>
        public event CardExistCompletedEventHandler CardExistCompleted;
        
        /// <remarks/>
        public event GetBalanceCompletedEventHandler GetBalanceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RespResult AddCard(string Prefix, string Number, decimal Balance, int Department, bool RealSale) {
            object[] results = this.Invoke("AddCard", new object[] {
                        Prefix,
                        Number,
                        Balance,
                        Department,
                        RealSale});
            return ((RespResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddCardAsync(string Prefix, string Number, decimal Balance, int Department, bool RealSale) {
            this.AddCardAsync(Prefix, Number, Balance, Department, RealSale, null);
        }
        
        /// <remarks/>
        public void AddCardAsync(string Prefix, string Number, decimal Balance, int Department, bool RealSale, object userState) {
            if ((this.AddCardOperationCompleted == null)) {
                this.AddCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCardOperationCompleted);
            }
            this.InvokeAsync("AddCard", new object[] {
                        Prefix,
                        Number,
                        Balance,
                        Department,
                        RealSale}, this.AddCardOperationCompleted, userState);
        }
        
        private void OnAddCardOperationCompleted(object arg) {
            if ((this.AddCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCardCompleted(this, new AddCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRedemption", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RespResult AddRedemption(string Prefix, string Number, decimal Balance, int Department, int Check, int Terminal, bool RealSale) {
            object[] results = this.Invoke("AddRedemption", new object[] {
                        Prefix,
                        Number,
                        Balance,
                        Department,
                        Check,
                        Terminal,
                        RealSale});
            return ((RespResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddRedemptionAsync(string Prefix, string Number, decimal Balance, int Department, int Check, int Terminal, bool RealSale) {
            this.AddRedemptionAsync(Prefix, Number, Balance, Department, Check, Terminal, RealSale, null);
        }
        
        /// <remarks/>
        public void AddRedemptionAsync(string Prefix, string Number, decimal Balance, int Department, int Check, int Terminal, bool RealSale, object userState) {
            if ((this.AddRedemptionOperationCompleted == null)) {
                this.AddRedemptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRedemptionOperationCompleted);
            }
            this.InvokeAsync("AddRedemption", new object[] {
                        Prefix,
                        Number,
                        Balance,
                        Department,
                        Check,
                        Terminal,
                        RealSale}, this.AddRedemptionOperationCompleted, userState);
        }
        
        private void OnAddRedemptionOperationCompleted(object arg) {
            if ((this.AddRedemptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRedemptionCompleted(this, new AddRedemptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CardExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CardExist(string Prefix, string Number) {
            object[] results = this.Invoke("CardExist", new object[] {
                        Prefix,
                        Number});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CardExistAsync(string Prefix, string Number) {
            this.CardExistAsync(Prefix, Number, null);
        }
        
        /// <remarks/>
        public void CardExistAsync(string Prefix, string Number, object userState) {
            if ((this.CardExistOperationCompleted == null)) {
                this.CardExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCardExistOperationCompleted);
            }
            this.InvokeAsync("CardExist", new object[] {
                        Prefix,
                        Number}, this.CardExistOperationCompleted, userState);
        }
        
        private void OnCardExistOperationCompleted(object arg) {
            if ((this.CardExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CardExistCompleted(this, new CardExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetBalanceResult GetBalance(string Prefix, string Number) {
            object[] results = this.Invoke("GetBalance", new object[] {
                        Prefix,
                        Number});
            return ((GetBalanceResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetBalanceAsync(string Prefix, string Number) {
            this.GetBalanceAsync(Prefix, Number, null);
        }
        
        /// <remarks/>
        public void GetBalanceAsync(string Prefix, string Number, object userState) {
            if ((this.GetBalanceOperationCompleted == null)) {
                this.GetBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBalanceOperationCompleted);
            }
            this.InvokeAsync("GetBalance", new object[] {
                        Prefix,
                        Number}, this.GetBalanceOperationCompleted, userState);
        }
        
        private void OnGetBalanceOperationCompleted(object arg) {
            if ((this.GetBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBalanceCompleted(this, new GetBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetBalanceResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RespResult {
        
        private bool sucsessField;
        
        private int errorCodeField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool Sucsess {
            get {
                return this.sucsessField;
            }
            set {
                this.sucsessField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GetBalanceResult : RespResult {
        
        private decimal balanceField;
        
        /// <remarks/>
        public decimal Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddCardCompletedEventHandler(object sender, AddCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RespResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RespResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddRedemptionCompletedEventHandler(object sender, AddRedemptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRedemptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRedemptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RespResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RespResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void CardExistCompletedEventHandler(object sender, CardExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CardExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CardExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetBalanceCompletedEventHandler(object sender, GetBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetBalanceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetBalanceResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591