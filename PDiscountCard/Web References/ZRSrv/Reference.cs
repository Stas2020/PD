//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PDiscountCard.ZRSrv {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://Piskov.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetZReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKKmsSumFromStartLifeOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHamsterCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHamsterChecksOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyLogFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyCheckFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPaymentCardInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentCardInfoReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddZRep2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddZRepOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZRepOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCheckCountFromEklzOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZRepStringsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZRepStringsTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZRep3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZRep2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DepIsWhiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDepsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::PDiscountCard.Properties.Settings.Default.PDiscountCard_ZRSrv_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetZReportsCompletedEventHandler GetZReportsCompleted;
        
        /// <remarks/>
        public event GetKKmsSumFromStartLifeCompletedEventHandler GetKKmsSumFromStartLifeCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event AddErrorCompletedEventHandler AddErrorCompleted;
        
        /// <remarks/>
        public event ConvertDataCompletedEventHandler ConvertDataCompleted;
        
        /// <remarks/>
        public event AddHamsterCheckCompletedEventHandler AddHamsterCheckCompleted;
        
        /// <remarks/>
        public event AddHamsterChecksCompletedEventHandler AddHamsterChecksCompleted;
        
        /// <remarks/>
        public event CopyLogFileCompletedEventHandler CopyLogFileCompleted;
        
        /// <remarks/>
        public event CopyCheckFileCompletedEventHandler CopyCheckFileCompleted;
        
        /// <remarks/>
        public event AddPaymentCardInfoCompletedEventHandler AddPaymentCardInfoCompleted;
        
        /// <remarks/>
        public event GetPaymentCardInfoReportCompletedEventHandler GetPaymentCardInfoReportCompleted;
        
        /// <remarks/>
        public event AddZRep2CompletedEventHandler AddZRep2Completed;
        
        /// <remarks/>
        public event AddZRepCompletedEventHandler AddZRepCompleted;
        
        /// <remarks/>
        public event GetZRepCompletedEventHandler GetZRepCompleted;
        
        /// <remarks/>
        public event GetCheckCountFromEklzCompletedEventHandler GetCheckCountFromEklzCompleted;
        
        /// <remarks/>
        public event GetZRepStringsCompletedEventHandler GetZRepStringsCompleted;
        
        /// <remarks/>
        public event GetZRepStringsTestCompletedEventHandler GetZRepStringsTestCompleted;
        
        /// <remarks/>
        public event GetZRep3CompletedEventHandler GetZRep3Completed;
        
        /// <remarks/>
        public event GetZRep2CompletedEventHandler GetZRep2Completed;
        
        /// <remarks/>
        public event DepIsWhiteCompletedEventHandler DepIsWhiteCompleted;
        
        /// <remarks/>
        public event GetAllDepsCompletedEventHandler GetAllDepsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/GetZReports", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetZReports(System.DateTime BusinessDate, int DepNum, int TermNum) {
            object[] results = this.Invoke("GetZReports", new object[] {
                        BusinessDate,
                        DepNum,
                        TermNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetZReportsAsync(System.DateTime BusinessDate, int DepNum, int TermNum) {
            this.GetZReportsAsync(BusinessDate, DepNum, TermNum, null);
        }
        
        /// <remarks/>
        public void GetZReportsAsync(System.DateTime BusinessDate, int DepNum, int TermNum, object userState) {
            if ((this.GetZReportsOperationCompleted == null)) {
                this.GetZReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZReportsOperationCompleted);
            }
            this.InvokeAsync("GetZReports", new object[] {
                        BusinessDate,
                        DepNum,
                        TermNum}, this.GetZReportsOperationCompleted, userState);
        }
        
        private void OnGetZReportsOperationCompleted(object arg) {
            if ((this.GetZReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZReportsCompleted(this, new GetZReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/GetKKmsSumFromStartLife", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetKKmsSumFromStartLife() {
            object[] results = this.Invoke("GetKKmsSumFromStartLife", new object[0]);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetKKmsSumFromStartLifeAsync() {
            this.GetKKmsSumFromStartLifeAsync(null);
        }
        
        /// <remarks/>
        public void GetKKmsSumFromStartLifeAsync(object userState) {
            if ((this.GetKKmsSumFromStartLifeOperationCompleted == null)) {
                this.GetKKmsSumFromStartLifeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKKmsSumFromStartLifeOperationCompleted);
            }
            this.InvokeAsync("GetKKmsSumFromStartLife", new object[0], this.GetKKmsSumFromStartLifeOperationCompleted, userState);
        }
        
        private void OnGetKKmsSumFromStartLifeOperationCompleted(object arg) {
            if ((this.GetKKmsSumFromStartLifeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKKmsSumFromStartLifeCompleted(this, new GetKKmsSumFromStartLifeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/Test", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Test() {
            object[] results = this.Invoke("Test", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        /// <remarks/>
        public void TestAsync(object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[0], this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/AddError", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddError(string Message, int _DepNum, int Term) {
            this.Invoke("AddError", new object[] {
                        Message,
                        _DepNum,
                        Term});
        }
        
        /// <remarks/>
        public void AddErrorAsync(string Message, int _DepNum, int Term) {
            this.AddErrorAsync(Message, _DepNum, Term, null);
        }
        
        /// <remarks/>
        public void AddErrorAsync(string Message, int _DepNum, int Term, object userState) {
            if ((this.AddErrorOperationCompleted == null)) {
                this.AddErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddErrorOperationCompleted);
            }
            this.InvokeAsync("AddError", new object[] {
                        Message,
                        _DepNum,
                        Term}, this.AddErrorOperationCompleted, userState);
        }
        
        private void OnAddErrorOperationCompleted(object arg) {
            if ((this.AddErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/ConvertData", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConvertData(int UnDepNumber) {
            this.Invoke("ConvertData", new object[] {
                        UnDepNumber});
        }
        
        /// <remarks/>
        public void ConvertDataAsync(int UnDepNumber) {
            this.ConvertDataAsync(UnDepNumber, null);
        }
        
        /// <remarks/>
        public void ConvertDataAsync(int UnDepNumber, object userState) {
            if ((this.ConvertDataOperationCompleted == null)) {
                this.ConvertDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertDataOperationCompleted);
            }
            this.InvokeAsync("ConvertData", new object[] {
                        UnDepNumber}, this.ConvertDataOperationCompleted, userState);
        }
        
        private void OnConvertDataOperationCompleted(object arg) {
            if ((this.ConvertDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/AddHamsterCheck", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddHamsterCheck(System.Xml.XmlNode Data, int UnDepNumber, int DepNumber, string FileName) {
            object[] results = this.Invoke("AddHamsterCheck", new object[] {
                        Data,
                        UnDepNumber,
                        DepNumber,
                        FileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHamsterCheckAsync(System.Xml.XmlNode Data, int UnDepNumber, int DepNumber, string FileName) {
            this.AddHamsterCheckAsync(Data, UnDepNumber, DepNumber, FileName, null);
        }
        
        /// <remarks/>
        public void AddHamsterCheckAsync(System.Xml.XmlNode Data, int UnDepNumber, int DepNumber, string FileName, object userState) {
            if ((this.AddHamsterCheckOperationCompleted == null)) {
                this.AddHamsterCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHamsterCheckOperationCompleted);
            }
            this.InvokeAsync("AddHamsterCheck", new object[] {
                        Data,
                        UnDepNumber,
                        DepNumber,
                        FileName}, this.AddHamsterCheckOperationCompleted, userState);
        }
        
        private void OnAddHamsterCheckOperationCompleted(object arg) {
            if ((this.AddHamsterCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHamsterCheckCompleted(this, new AddHamsterCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/AddHamsterChecks", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddHamsterChecks(System.Xml.XmlNode Data, int UnDepNumber, int DepNumber, string FileName) {
            object[] results = this.Invoke("AddHamsterChecks", new object[] {
                        Data,
                        UnDepNumber,
                        DepNumber,
                        FileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHamsterChecksAsync(System.Xml.XmlNode Data, int UnDepNumber, int DepNumber, string FileName) {
            this.AddHamsterChecksAsync(Data, UnDepNumber, DepNumber, FileName, null);
        }
        
        /// <remarks/>
        public void AddHamsterChecksAsync(System.Xml.XmlNode Data, int UnDepNumber, int DepNumber, string FileName, object userState) {
            if ((this.AddHamsterChecksOperationCompleted == null)) {
                this.AddHamsterChecksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHamsterChecksOperationCompleted);
            }
            this.InvokeAsync("AddHamsterChecks", new object[] {
                        Data,
                        UnDepNumber,
                        DepNumber,
                        FileName}, this.AddHamsterChecksOperationCompleted, userState);
        }
        
        private void OnAddHamsterChecksOperationCompleted(object arg) {
            if ((this.AddHamsterChecksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHamsterChecksCompleted(this, new AddHamsterChecksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/CopyLogFile", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CopyCheckFileResult CopyLogFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, long OriginalDataLenght, string FName, int UnDepNumber, int DepNumber, int FType) {
            object[] results = this.Invoke("CopyLogFile", new object[] {
                        data,
                        OriginalDataLenght,
                        FName,
                        UnDepNumber,
                        DepNumber,
                        FType});
            return ((CopyCheckFileResult)(results[0]));
        }
        
        /// <remarks/>
        public void CopyLogFileAsync(byte[] data, long OriginalDataLenght, string FName, int UnDepNumber, int DepNumber, int FType) {
            this.CopyLogFileAsync(data, OriginalDataLenght, FName, UnDepNumber, DepNumber, FType, null);
        }
        
        /// <remarks/>
        public void CopyLogFileAsync(byte[] data, long OriginalDataLenght, string FName, int UnDepNumber, int DepNumber, int FType, object userState) {
            if ((this.CopyLogFileOperationCompleted == null)) {
                this.CopyLogFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyLogFileOperationCompleted);
            }
            this.InvokeAsync("CopyLogFile", new object[] {
                        data,
                        OriginalDataLenght,
                        FName,
                        UnDepNumber,
                        DepNumber,
                        FType}, this.CopyLogFileOperationCompleted, userState);
        }
        
        private void OnCopyLogFileOperationCompleted(object arg) {
            if ((this.CopyLogFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyLogFileCompleted(this, new CopyLogFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/CopyCheckFile", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CopyCheckFileResult CopyCheckFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, long OriginalDataLenght, string FName, int UnDepNumber, int DepNumber) {
            object[] results = this.Invoke("CopyCheckFile", new object[] {
                        data,
                        OriginalDataLenght,
                        FName,
                        UnDepNumber,
                        DepNumber});
            return ((CopyCheckFileResult)(results[0]));
        }
        
        /// <remarks/>
        public void CopyCheckFileAsync(byte[] data, long OriginalDataLenght, string FName, int UnDepNumber, int DepNumber) {
            this.CopyCheckFileAsync(data, OriginalDataLenght, FName, UnDepNumber, DepNumber, null);
        }
        
        /// <remarks/>
        public void CopyCheckFileAsync(byte[] data, long OriginalDataLenght, string FName, int UnDepNumber, int DepNumber, object userState) {
            if ((this.CopyCheckFileOperationCompleted == null)) {
                this.CopyCheckFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyCheckFileOperationCompleted);
            }
            this.InvokeAsync("CopyCheckFile", new object[] {
                        data,
                        OriginalDataLenght,
                        FName,
                        UnDepNumber,
                        DepNumber}, this.CopyCheckFileOperationCompleted, userState);
        }
        
        private void OnCopyCheckFileOperationCompleted(object arg) {
            if ((this.CopyCheckFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyCheckFileCompleted(this, new CopyCheckFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/AddPaymentCardInfo", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddPaymentCardInfo(PaymentCard mPaymentCardInfo) {
            object[] results = this.Invoke("AddPaymentCardInfo", new object[] {
                        mPaymentCardInfo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddPaymentCardInfoAsync(PaymentCard mPaymentCardInfo) {
            this.AddPaymentCardInfoAsync(mPaymentCardInfo, null);
        }
        
        /// <remarks/>
        public void AddPaymentCardInfoAsync(PaymentCard mPaymentCardInfo, object userState) {
            if ((this.AddPaymentCardInfoOperationCompleted == null)) {
                this.AddPaymentCardInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPaymentCardInfoOperationCompleted);
            }
            this.InvokeAsync("AddPaymentCardInfo", new object[] {
                        mPaymentCardInfo}, this.AddPaymentCardInfoOperationCompleted, userState);
        }
        
        private void OnAddPaymentCardInfoOperationCompleted(object arg) {
            if ((this.AddPaymentCardInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPaymentCardInfoCompleted(this, new AddPaymentCardInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/GetPaymentCardInfoReport", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PaymentCard[] GetPaymentCardInfoReport(int UndepNum, System.DateTime Bdate) {
            object[] results = this.Invoke("GetPaymentCardInfoReport", new object[] {
                        UndepNum,
                        Bdate});
            return ((PaymentCard[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentCardInfoReportAsync(int UndepNum, System.DateTime Bdate) {
            this.GetPaymentCardInfoReportAsync(UndepNum, Bdate, null);
        }
        
        /// <remarks/>
        public void GetPaymentCardInfoReportAsync(int UndepNum, System.DateTime Bdate, object userState) {
            if ((this.GetPaymentCardInfoReportOperationCompleted == null)) {
                this.GetPaymentCardInfoReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentCardInfoReportOperationCompleted);
            }
            this.InvokeAsync("GetPaymentCardInfoReport", new object[] {
                        UndepNum,
                        Bdate}, this.GetPaymentCardInfoReportOperationCompleted, userState);
        }
        
        private void OnGetPaymentCardInfoReportOperationCompleted(object arg) {
            if ((this.GetPaymentCardInfoReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentCardInfoReportCompleted(this, new GetPaymentCardInfoReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/AddZRep2", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddZRep2(TblZReports2 Rep) {
            object[] results = this.Invoke("AddZRep2", new object[] {
                        Rep});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddZRep2Async(TblZReports2 Rep) {
            this.AddZRep2Async(Rep, null);
        }
        
        /// <remarks/>
        public void AddZRep2Async(TblZReports2 Rep, object userState) {
            if ((this.AddZRep2OperationCompleted == null)) {
                this.AddZRep2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddZRep2OperationCompleted);
            }
            this.InvokeAsync("AddZRep2", new object[] {
                        Rep}, this.AddZRep2OperationCompleted, userState);
        }
        
        private void OnAddZRep2OperationCompleted(object arg) {
            if ((this.AddZRep2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddZRep2Completed(this, new AddZRep2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/AddZRep", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddZRep(ZReportInfo ZInfo) {
            object[] results = this.Invoke("AddZRep", new object[] {
                        ZInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddZRepAsync(ZReportInfo ZInfo) {
            this.AddZRepAsync(ZInfo, null);
        }
        
        /// <remarks/>
        public void AddZRepAsync(ZReportInfo ZInfo, object userState) {
            if ((this.AddZRepOperationCompleted == null)) {
                this.AddZRepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddZRepOperationCompleted);
            }
            this.InvokeAsync("AddZRep", new object[] {
                        ZInfo}, this.AddZRepOperationCompleted, userState);
        }
        
        private void OnAddZRepOperationCompleted(object arg) {
            if ((this.AddZRepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddZRepCompleted(this, new AddZRepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/GetZRep", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ZReportInfo GetZRep(System.DateTime BusinessDate, int UnDepNum) {
            object[] results = this.Invoke("GetZRep", new object[] {
                        BusinessDate,
                        UnDepNum});
            return ((ZReportInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetZRepAsync(System.DateTime BusinessDate, int UnDepNum) {
            this.GetZRepAsync(BusinessDate, UnDepNum, null);
        }
        
        /// <remarks/>
        public void GetZRepAsync(System.DateTime BusinessDate, int UnDepNum, object userState) {
            if ((this.GetZRepOperationCompleted == null)) {
                this.GetZRepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZRepOperationCompleted);
            }
            this.InvokeAsync("GetZRep", new object[] {
                        BusinessDate,
                        UnDepNum}, this.GetZRepOperationCompleted, userState);
        }
        
        private void OnGetZRepOperationCompleted(object arg) {
            if ((this.GetZRepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZRepCompleted(this, new GetZRepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/GetCheckCountFromEklz", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCheckCountFromEklz(string kkmnum, int repnum2) {
            object[] results = this.Invoke("GetCheckCountFromEklz", new object[] {
                        kkmnum,
                        repnum2});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCheckCountFromEklzAsync(string kkmnum, int repnum2) {
            this.GetCheckCountFromEklzAsync(kkmnum, repnum2, null);
        }
        
        /// <remarks/>
        public void GetCheckCountFromEklzAsync(string kkmnum, int repnum2, object userState) {
            if ((this.GetCheckCountFromEklzOperationCompleted == null)) {
                this.GetCheckCountFromEklzOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCheckCountFromEklzOperationCompleted);
            }
            this.InvokeAsync("GetCheckCountFromEklz", new object[] {
                        kkmnum,
                        repnum2}, this.GetCheckCountFromEklzOperationCompleted, userState);
        }
        
        private void OnGetCheckCountFromEklzOperationCompleted(object arg) {
            if ((this.GetCheckCountFromEklzCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCheckCountFromEklzCompleted(this, new GetCheckCountFromEklzCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/GetZRepStrings", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetZRepStrings(System.DateTime BusinessDate, int DepNum, int Term) {
            object[] results = this.Invoke("GetZRepStrings", new object[] {
                        BusinessDate,
                        DepNum,
                        Term});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetZRepStringsAsync(System.DateTime BusinessDate, int DepNum, int Term) {
            this.GetZRepStringsAsync(BusinessDate, DepNum, Term, null);
        }
        
        /// <remarks/>
        public void GetZRepStringsAsync(System.DateTime BusinessDate, int DepNum, int Term, object userState) {
            if ((this.GetZRepStringsOperationCompleted == null)) {
                this.GetZRepStringsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZRepStringsOperationCompleted);
            }
            this.InvokeAsync("GetZRepStrings", new object[] {
                        BusinessDate,
                        DepNum,
                        Term}, this.GetZRepStringsOperationCompleted, userState);
        }
        
        private void OnGetZRepStringsOperationCompleted(object arg) {
            if ((this.GetZRepStringsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZRepStringsCompleted(this, new GetZRepStringsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/GetZRepStringsTest", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetZRepStringsTest() {
            object[] results = this.Invoke("GetZRepStringsTest", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetZRepStringsTestAsync() {
            this.GetZRepStringsTestAsync(null);
        }
        
        /// <remarks/>
        public void GetZRepStringsTestAsync(object userState) {
            if ((this.GetZRepStringsTestOperationCompleted == null)) {
                this.GetZRepStringsTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZRepStringsTestOperationCompleted);
            }
            this.InvokeAsync("GetZRepStringsTest", new object[0], this.GetZRepStringsTestOperationCompleted, userState);
        }
        
        private void OnGetZRepStringsTestOperationCompleted(object arg) {
            if ((this.GetZRepStringsTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZRepStringsTestCompleted(this, new GetZRepStringsTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/GetZRep3", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TblZReports2[] GetZRep3(System.DateTime BusinessDate, int DepNum) {
            object[] results = this.Invoke("GetZRep3", new object[] {
                        BusinessDate,
                        DepNum});
            return ((TblZReports2[])(results[0]));
        }
        
        /// <remarks/>
        public void GetZRep3Async(System.DateTime BusinessDate, int DepNum) {
            this.GetZRep3Async(BusinessDate, DepNum, null);
        }
        
        /// <remarks/>
        public void GetZRep3Async(System.DateTime BusinessDate, int DepNum, object userState) {
            if ((this.GetZRep3OperationCompleted == null)) {
                this.GetZRep3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZRep3OperationCompleted);
            }
            this.InvokeAsync("GetZRep3", new object[] {
                        BusinessDate,
                        DepNum}, this.GetZRep3OperationCompleted, userState);
        }
        
        private void OnGetZRep3OperationCompleted(object arg) {
            if ((this.GetZRep3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZRep3Completed(this, new GetZRep3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/GetZRep2", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ZReportInfo[] GetZRep2(System.DateTime BusinessDate, int UnDepNum) {
            object[] results = this.Invoke("GetZRep2", new object[] {
                        BusinessDate,
                        UnDepNum});
            return ((ZReportInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetZRep2Async(System.DateTime BusinessDate, int UnDepNum) {
            this.GetZRep2Async(BusinessDate, UnDepNum, null);
        }
        
        /// <remarks/>
        public void GetZRep2Async(System.DateTime BusinessDate, int UnDepNum, object userState) {
            if ((this.GetZRep2OperationCompleted == null)) {
                this.GetZRep2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZRep2OperationCompleted);
            }
            this.InvokeAsync("GetZRep2", new object[] {
                        BusinessDate,
                        UnDepNum}, this.GetZRep2OperationCompleted, userState);
        }
        
        private void OnGetZRep2OperationCompleted(object arg) {
            if ((this.GetZRep2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZRep2Completed(this, new GetZRep2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/DepIsWhite", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DepIsWhite(int _DepNum) {
            object[] results = this.Invoke("DepIsWhite", new object[] {
                        _DepNum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DepIsWhiteAsync(int _DepNum) {
            this.DepIsWhiteAsync(_DepNum, null);
        }
        
        /// <remarks/>
        public void DepIsWhiteAsync(int _DepNum, object userState) {
            if ((this.DepIsWhiteOperationCompleted == null)) {
                this.DepIsWhiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepIsWhiteOperationCompleted);
            }
            this.InvokeAsync("DepIsWhite", new object[] {
                        _DepNum}, this.DepIsWhiteOperationCompleted, userState);
        }
        
        private void OnDepIsWhiteOperationCompleted(object arg) {
            if ((this.DepIsWhiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepIsWhiteCompleted(this, new DepIsWhiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Piskov.org/GetAllDeps", RequestNamespace="http://Piskov.org/", ResponseNamespace="http://Piskov.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DimTable[] GetAllDeps() {
            object[] results = this.Invoke("GetAllDeps", new object[0]);
            return ((DimTable[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDepsAsync() {
            this.GetAllDepsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllDepsAsync(object userState) {
            if ((this.GetAllDepsOperationCompleted == null)) {
                this.GetAllDepsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDepsOperationCompleted);
            }
            this.InvokeAsync("GetAllDeps", new object[0], this.GetAllDepsOperationCompleted, userState);
        }
        
        private void OnGetAllDepsOperationCompleted(object arg) {
            if ((this.GetAllDepsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDepsCompleted(this, new GetAllDepsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Piskov.org/")]
    public partial class CopyCheckFileResult {
        
        private bool sucsessField;
        
        private string messageField;
        
        private long fileLenghtField;
        
        /// <remarks/>
        public bool Sucsess {
            get {
                return this.sucsessField;
            }
            set {
                this.sucsessField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public long FileLenght {
            get {
                return this.fileLenghtField;
            }
            set {
                this.fileLenghtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Piskov.org/")]
    public partial class DimTable {
        
        private string unDepNumberField;
        
        private string pointNameField;
        
        private string placeField;
        
        private System.Nullable<int> cassaField;
        
        private System.Nullable<bool> cassEnableField;
        
        /// <remarks/>
        public string UnDepNumber {
            get {
                return this.unDepNumberField;
            }
            set {
                this.unDepNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PointName {
            get {
                return this.pointNameField;
            }
            set {
                this.pointNameField = value;
            }
        }
        
        /// <remarks/>
        public string Place {
            get {
                return this.placeField;
            }
            set {
                this.placeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Cassa {
            get {
                return this.cassaField;
            }
            set {
                this.cassaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> CassEnable {
            get {
                return this.cassEnableField;
            }
            set {
                this.cassEnableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Piskov.org/")]
    public partial class ZReportInfo {
        
        private string reportField;
        
        private decimal cashField;
        
        private decimal cardField;
        
        private decimal creditField;
        
        private decimal cashXField;
        
        private decimal cardXField;
        
        private decimal creditXField;
        
        private int anulChecksField;
        
        private int cashCountField;
        
        private int cardCountField;
        
        private decimal vozvrCashField;
        
        private decimal vozvrCardField;
        
        private decimal vozvrCreditField;
        
        private decimal vozvrCashXField;
        
        private decimal vozvrCardXField;
        
        private decimal vozvrCreditXField;
        
        private int cashCountXField;
        
        private int cardCountXField;
        
        private int creditCountXField;
        
        private int vozvrCardCountXField;
        
        private int vozvrCashCountXField;
        
        private int vozvrCreditCountXField;
        
        private int vozvrCountField;
        
        private int vozvrNumField;
        
        private System.DateTime businessDateField;
        
        private System.DateTime systemDateField;
        
        private int depnumField;
        
        private int unDepNumField;
        
        private string klisheField;
        
        private string kkmNumField;
        
        private string iNNField;
        
        private int repNumField;
        
        private string dateTimeOfReportField;
        
        private int repNum2Field;
        
        private bool izEKLZFoolField;
        
        private decimal startSumField;
        
        private decimal stopSumField;
        
        private decimal stopSumFromStartLifeField;
        
        private string eKLZNUMField;
        
        private long kPKNumField;
        
        private string kriptoCodeField;
        
        /// <remarks/>
        public string Report {
            get {
                return this.reportField;
            }
            set {
                this.reportField = value;
            }
        }
        
        /// <remarks/>
        public decimal Cash {
            get {
                return this.cashField;
            }
            set {
                this.cashField = value;
            }
        }
        
        /// <remarks/>
        public decimal Card {
            get {
                return this.cardField;
            }
            set {
                this.cardField = value;
            }
        }
        
        /// <remarks/>
        public decimal Credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        public decimal CashX {
            get {
                return this.cashXField;
            }
            set {
                this.cashXField = value;
            }
        }
        
        /// <remarks/>
        public decimal CardX {
            get {
                return this.cardXField;
            }
            set {
                this.cardXField = value;
            }
        }
        
        /// <remarks/>
        public decimal CreditX {
            get {
                return this.creditXField;
            }
            set {
                this.creditXField = value;
            }
        }
        
        /// <remarks/>
        public int AnulChecks {
            get {
                return this.anulChecksField;
            }
            set {
                this.anulChecksField = value;
            }
        }
        
        /// <remarks/>
        public int CashCount {
            get {
                return this.cashCountField;
            }
            set {
                this.cashCountField = value;
            }
        }
        
        /// <remarks/>
        public int CardCount {
            get {
                return this.cardCountField;
            }
            set {
                this.cardCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal VozvrCash {
            get {
                return this.vozvrCashField;
            }
            set {
                this.vozvrCashField = value;
            }
        }
        
        /// <remarks/>
        public decimal VozvrCard {
            get {
                return this.vozvrCardField;
            }
            set {
                this.vozvrCardField = value;
            }
        }
        
        /// <remarks/>
        public decimal VozvrCredit {
            get {
                return this.vozvrCreditField;
            }
            set {
                this.vozvrCreditField = value;
            }
        }
        
        /// <remarks/>
        public decimal VozvrCashX {
            get {
                return this.vozvrCashXField;
            }
            set {
                this.vozvrCashXField = value;
            }
        }
        
        /// <remarks/>
        public decimal VozvrCardX {
            get {
                return this.vozvrCardXField;
            }
            set {
                this.vozvrCardXField = value;
            }
        }
        
        /// <remarks/>
        public decimal VozvrCreditX {
            get {
                return this.vozvrCreditXField;
            }
            set {
                this.vozvrCreditXField = value;
            }
        }
        
        /// <remarks/>
        public int CashCountX {
            get {
                return this.cashCountXField;
            }
            set {
                this.cashCountXField = value;
            }
        }
        
        /// <remarks/>
        public int CardCountX {
            get {
                return this.cardCountXField;
            }
            set {
                this.cardCountXField = value;
            }
        }
        
        /// <remarks/>
        public int CreditCountX {
            get {
                return this.creditCountXField;
            }
            set {
                this.creditCountXField = value;
            }
        }
        
        /// <remarks/>
        public int VozvrCardCountX {
            get {
                return this.vozvrCardCountXField;
            }
            set {
                this.vozvrCardCountXField = value;
            }
        }
        
        /// <remarks/>
        public int VozvrCashCountX {
            get {
                return this.vozvrCashCountXField;
            }
            set {
                this.vozvrCashCountXField = value;
            }
        }
        
        /// <remarks/>
        public int VozvrCreditCountX {
            get {
                return this.vozvrCreditCountXField;
            }
            set {
                this.vozvrCreditCountXField = value;
            }
        }
        
        /// <remarks/>
        public int VozvrCount {
            get {
                return this.vozvrCountField;
            }
            set {
                this.vozvrCountField = value;
            }
        }
        
        /// <remarks/>
        public int VozvrNum {
            get {
                return this.vozvrNumField;
            }
            set {
                this.vozvrNumField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BusinessDate {
            get {
                return this.businessDateField;
            }
            set {
                this.businessDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SystemDate {
            get {
                return this.systemDateField;
            }
            set {
                this.systemDateField = value;
            }
        }
        
        /// <remarks/>
        public int Depnum {
            get {
                return this.depnumField;
            }
            set {
                this.depnumField = value;
            }
        }
        
        /// <remarks/>
        public int UnDepNum {
            get {
                return this.unDepNumField;
            }
            set {
                this.unDepNumField = value;
            }
        }
        
        /// <remarks/>
        public string Klishe {
            get {
                return this.klisheField;
            }
            set {
                this.klisheField = value;
            }
        }
        
        /// <remarks/>
        public string KkmNum {
            get {
                return this.kkmNumField;
            }
            set {
                this.kkmNumField = value;
            }
        }
        
        /// <remarks/>
        public string INN {
            get {
                return this.iNNField;
            }
            set {
                this.iNNField = value;
            }
        }
        
        /// <remarks/>
        public int RepNum {
            get {
                return this.repNumField;
            }
            set {
                this.repNumField = value;
            }
        }
        
        /// <remarks/>
        public string DateTimeOfReport {
            get {
                return this.dateTimeOfReportField;
            }
            set {
                this.dateTimeOfReportField = value;
            }
        }
        
        /// <remarks/>
        public int RepNum2 {
            get {
                return this.repNum2Field;
            }
            set {
                this.repNum2Field = value;
            }
        }
        
        /// <remarks/>
        public bool IzEKLZFool {
            get {
                return this.izEKLZFoolField;
            }
            set {
                this.izEKLZFoolField = value;
            }
        }
        
        /// <remarks/>
        public decimal StartSum {
            get {
                return this.startSumField;
            }
            set {
                this.startSumField = value;
            }
        }
        
        /// <remarks/>
        public decimal StopSum {
            get {
                return this.stopSumField;
            }
            set {
                this.stopSumField = value;
            }
        }
        
        /// <remarks/>
        public decimal StopSumFromStartLife {
            get {
                return this.stopSumFromStartLifeField;
            }
            set {
                this.stopSumFromStartLifeField = value;
            }
        }
        
        /// <remarks/>
        public string EKLZNUM {
            get {
                return this.eKLZNUMField;
            }
            set {
                this.eKLZNUMField = value;
            }
        }
        
        /// <remarks/>
        public long KPKNum {
            get {
                return this.kPKNumField;
            }
            set {
                this.kPKNumField = value;
            }
        }
        
        /// <remarks/>
        public string KriptoCode {
            get {
                return this.kriptoCodeField;
            }
            set {
                this.kriptoCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Piskov.org/")]
    public partial class TblZRepPaymentsData {
        
        private int idField;
        
        private int posDataIdField;
        
        private int paymentIdField;
        
        private string nameField;
        
        private int smenaSummRegNumField;
        
        private decimal smenaSummField;
        
        private System.Nullable<int> smenaCountRegNumField;
        
        private System.Nullable<int> smenaCountField;
        
        private TblZRepPositionData tblZRepPositionDataField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int PosDataId {
            get {
                return this.posDataIdField;
            }
            set {
                this.posDataIdField = value;
            }
        }
        
        /// <remarks/>
        public int PaymentId {
            get {
                return this.paymentIdField;
            }
            set {
                this.paymentIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int SmenaSummRegNum {
            get {
                return this.smenaSummRegNumField;
            }
            set {
                this.smenaSummRegNumField = value;
            }
        }
        
        /// <remarks/>
        public decimal SmenaSumm {
            get {
                return this.smenaSummField;
            }
            set {
                this.smenaSummField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SmenaCountRegNum {
            get {
                return this.smenaCountRegNumField;
            }
            set {
                this.smenaCountRegNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SmenaCount {
            get {
                return this.smenaCountField;
            }
            set {
                this.smenaCountField = value;
            }
        }
        
        /// <remarks/>
        public TblZRepPositionData TblZRepPositionData {
            get {
                return this.tblZRepPositionDataField;
            }
            set {
                this.tblZRepPositionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Piskov.org/")]
    public partial class TblZRepPositionData {
        
        private int idField;
        
        private int posIdField;
        
        private int zRepIdField;
        
        private string nameField;
        
        private int smenaSummRegNumField;
        
        private int smenaCountRegNumField;
        
        private int smenaCountField;
        
        private decimal smenaSummField;
        
        private int allCountField;
        
        private int allCountRegNumField;
        
        private TblZRepPaymentsData[] tblZRepPaymentsDataField;
        
        private TblZReports2 tblZReports2Field;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int PosId {
            get {
                return this.posIdField;
            }
            set {
                this.posIdField = value;
            }
        }
        
        /// <remarks/>
        public int ZRepId {
            get {
                return this.zRepIdField;
            }
            set {
                this.zRepIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int SmenaSummRegNum {
            get {
                return this.smenaSummRegNumField;
            }
            set {
                this.smenaSummRegNumField = value;
            }
        }
        
        /// <remarks/>
        public int SmenaCountRegNum {
            get {
                return this.smenaCountRegNumField;
            }
            set {
                this.smenaCountRegNumField = value;
            }
        }
        
        /// <remarks/>
        public int SmenaCount {
            get {
                return this.smenaCountField;
            }
            set {
                this.smenaCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal SmenaSumm {
            get {
                return this.smenaSummField;
            }
            set {
                this.smenaSummField = value;
            }
        }
        
        /// <remarks/>
        public int AllCount {
            get {
                return this.allCountField;
            }
            set {
                this.allCountField = value;
            }
        }
        
        /// <remarks/>
        public int AllCountRegNum {
            get {
                return this.allCountRegNumField;
            }
            set {
                this.allCountRegNumField = value;
            }
        }
        
        /// <remarks/>
        public TblZRepPaymentsData[] TblZRepPaymentsData {
            get {
                return this.tblZRepPaymentsDataField;
            }
            set {
                this.tblZRepPaymentsDataField = value;
            }
        }
        
        /// <remarks/>
        public TblZReports2 TblZReports2 {
            get {
                return this.tblZReports2Field;
            }
            set {
                this.tblZReports2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Piskov.org/")]
    public partial class TblZReports2 {
        
        private int idField;
        
        private System.DateTime systemDateField;
        
        private decimal summ1Field;
        
        private decimal summ2Field;
        
        private decimal summ3Field;
        
        private decimal summ4Field;
        
        private decimal vSumm1Field;
        
        private decimal vSumm2Field;
        
        private decimal vSumm3Field;
        
        private decimal vSumm4Field;
        
        private System.DateTime businessDateField;
        
        private string fpField;
        
        private int fdField;
        
        private int bigNumField;
        
        private int smallNumField;
        
        private System.DateTime sysDtField;
        
        private string qRAsStrField;
        
        private int termField;
        
        private int depField;
        
        private int smenaField;
        
        private string klisheField;
        
        private string rnField;
        
        private string znField;
        
        private string iNNField;
        
        private string fNNumberField;
        
        private TblZRepPositionData[] tblZRepPositionDataField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SystemDate {
            get {
                return this.systemDateField;
            }
            set {
                this.systemDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal Summ1 {
            get {
                return this.summ1Field;
            }
            set {
                this.summ1Field = value;
            }
        }
        
        /// <remarks/>
        public decimal Summ2 {
            get {
                return this.summ2Field;
            }
            set {
                this.summ2Field = value;
            }
        }
        
        /// <remarks/>
        public decimal Summ3 {
            get {
                return this.summ3Field;
            }
            set {
                this.summ3Field = value;
            }
        }
        
        /// <remarks/>
        public decimal Summ4 {
            get {
                return this.summ4Field;
            }
            set {
                this.summ4Field = value;
            }
        }
        
        /// <remarks/>
        public decimal VSumm1 {
            get {
                return this.vSumm1Field;
            }
            set {
                this.vSumm1Field = value;
            }
        }
        
        /// <remarks/>
        public decimal VSumm2 {
            get {
                return this.vSumm2Field;
            }
            set {
                this.vSumm2Field = value;
            }
        }
        
        /// <remarks/>
        public decimal VSumm3 {
            get {
                return this.vSumm3Field;
            }
            set {
                this.vSumm3Field = value;
            }
        }
        
        /// <remarks/>
        public decimal VSumm4 {
            get {
                return this.vSumm4Field;
            }
            set {
                this.vSumm4Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BusinessDate {
            get {
                return this.businessDateField;
            }
            set {
                this.businessDateField = value;
            }
        }
        
        /// <remarks/>
        public string FP {
            get {
                return this.fpField;
            }
            set {
                this.fpField = value;
            }
        }
        
        /// <remarks/>
        public int FD {
            get {
                return this.fdField;
            }
            set {
                this.fdField = value;
            }
        }
        
        /// <remarks/>
        public int bigNum {
            get {
                return this.bigNumField;
            }
            set {
                this.bigNumField = value;
            }
        }
        
        /// <remarks/>
        public int SmallNum {
            get {
                return this.smallNumField;
            }
            set {
                this.smallNumField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SysDt {
            get {
                return this.sysDtField;
            }
            set {
                this.sysDtField = value;
            }
        }
        
        /// <remarks/>
        public string QRAsStr {
            get {
                return this.qRAsStrField;
            }
            set {
                this.qRAsStrField = value;
            }
        }
        
        /// <remarks/>
        public int Term {
            get {
                return this.termField;
            }
            set {
                this.termField = value;
            }
        }
        
        /// <remarks/>
        public int Dep {
            get {
                return this.depField;
            }
            set {
                this.depField = value;
            }
        }
        
        /// <remarks/>
        public int Smena {
            get {
                return this.smenaField;
            }
            set {
                this.smenaField = value;
            }
        }
        
        /// <remarks/>
        public string Klishe {
            get {
                return this.klisheField;
            }
            set {
                this.klisheField = value;
            }
        }
        
        /// <remarks/>
        public string RN {
            get {
                return this.rnField;
            }
            set {
                this.rnField = value;
            }
        }
        
        /// <remarks/>
        public string ZN {
            get {
                return this.znField;
            }
            set {
                this.znField = value;
            }
        }
        
        /// <remarks/>
        public string INN {
            get {
                return this.iNNField;
            }
            set {
                this.iNNField = value;
            }
        }
        
        /// <remarks/>
        public string FNNumber {
            get {
                return this.fNNumberField;
            }
            set {
                this.fNNumberField = value;
            }
        }
        
        /// <remarks/>
        public TblZRepPositionData[] TblZRepPositionData {
            get {
                return this.tblZRepPositionDataField;
            }
            set {
                this.tblZRepPositionDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Piskov.org/")]
    public partial class PaymentCard {
        
        private int idField;
        
        private System.Nullable<int> depField;
        
        private System.Nullable<int> unDepField;
        
        private System.Nullable<System.DateTime> businessDateField;
        
        private System.Nullable<System.DateTime> systemDateField;
        
        private System.Nullable<int> cardPrefixField;
        
        private System.Nullable<int> cardNumberField;
        
        private System.Nullable<decimal> summField;
        
        private string slipField;
        
        private System.Nullable<decimal> checkNumberField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Dep {
            get {
                return this.depField;
            }
            set {
                this.depField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> UnDep {
            get {
                return this.unDepField;
            }
            set {
                this.unDepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BusinessDate {
            get {
                return this.businessDateField;
            }
            set {
                this.businessDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SystemDate {
            get {
                return this.systemDateField;
            }
            set {
                this.systemDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CardPrefix {
            get {
                return this.cardPrefixField;
            }
            set {
                this.cardPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Summ {
            get {
                return this.summField;
            }
            set {
                this.summField = value;
            }
        }
        
        /// <remarks/>
        public string Slip {
            get {
                return this.slipField;
            }
            set {
                this.slipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> CheckNumber {
            get {
                return this.checkNumberField;
            }
            set {
                this.checkNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetZReportsCompletedEventHandler(object sender, GetZReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetKKmsSumFromStartLifeCompletedEventHandler(object sender, GetKKmsSumFromStartLifeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKKmsSumFromStartLifeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKKmsSumFromStartLifeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddErrorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ConvertDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddHamsterCheckCompletedEventHandler(object sender, AddHamsterCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHamsterCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHamsterCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddHamsterChecksCompletedEventHandler(object sender, AddHamsterChecksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHamsterChecksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHamsterChecksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CopyLogFileCompletedEventHandler(object sender, CopyLogFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyLogFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyLogFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CopyCheckFileResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CopyCheckFileResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CopyCheckFileCompletedEventHandler(object sender, CopyCheckFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyCheckFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyCheckFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CopyCheckFileResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CopyCheckFileResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddPaymentCardInfoCompletedEventHandler(object sender, AddPaymentCardInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPaymentCardInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPaymentCardInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPaymentCardInfoReportCompletedEventHandler(object sender, GetPaymentCardInfoReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentCardInfoReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentCardInfoReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentCard[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddZRep2CompletedEventHandler(object sender, AddZRep2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddZRep2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddZRep2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddZRepCompletedEventHandler(object sender, AddZRepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddZRepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddZRepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetZRepCompletedEventHandler(object sender, GetZRepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZRepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZRepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ZReportInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ZReportInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCheckCountFromEklzCompletedEventHandler(object sender, GetCheckCountFromEklzCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCheckCountFromEklzCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCheckCountFromEklzCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetZRepStringsCompletedEventHandler(object sender, GetZRepStringsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZRepStringsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZRepStringsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetZRepStringsTestCompletedEventHandler(object sender, GetZRepStringsTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZRepStringsTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZRepStringsTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetZRep3CompletedEventHandler(object sender, GetZRep3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZRep3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZRep3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TblZReports2[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TblZReports2[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetZRep2CompletedEventHandler(object sender, GetZRep2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZRep2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZRep2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ZReportInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ZReportInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DepIsWhiteCompletedEventHandler(object sender, DepIsWhiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepIsWhiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepIsWhiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAllDepsCompletedEventHandler(object sender, GetAllDepsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDepsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDepsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DimTable[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DimTable[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591